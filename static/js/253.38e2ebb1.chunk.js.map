{"version":3,"file":"static/js/253.38e2ebb1.chunk.js","mappings":"uJACA,QAAqH,4B,aCG9G,MAoCP,EApCuCA,IACvC,IAAKC,EAAUC,IAAeC,EAAAA,EAAAA,WAAS,IAClCC,EAAQC,IAAaF,EAAAA,EAAAA,UAASH,EAAMI,SAEzCE,EAAAA,EAAAA,YAAU,KACTD,EAAUL,EAAMI,OAAO,GACrB,CAACJ,EAAMI,SAaN,OACIG,EAAAA,EAAAA,MAAA,OAAAC,SAAA,EACMP,IACAQ,EAAAA,EAAAA,KAAA,OAAAD,UACEC,EAAAA,EAAAA,KAAA,QAAMC,cAfGC,KACtBT,GAAY,EAAK,EAckCM,SAAEJ,GAAU,gBAGrDH,IACDQ,EAAAA,EAAAA,KAAA,OAAAD,UACIC,EAAAA,EAAAA,KAAA,SAAOG,SAdCC,IACtBR,EAAUQ,EAAEC,cAAcC,MAAM,EAaeC,WAAW,EAAMC,OAjBvCC,KACxBhB,GAAY,EAAM,EAgByEa,MAAOX,QAGvF,ECXd,QAnBA,SAAqBJ,GACjB,OAAIA,EAAMmB,SAIdZ,EAAAA,EAAAA,MAAA,OAAAC,SAAA,EAEAC,EAAAA,EAAAA,KAAA,WAGAA,EAAAA,EAAAA,KAAA,OAAKW,UAAWC,EAAab,UAACC,EAAAA,EAAAA,KAACa,EAAsB,CAAClB,OAAQJ,EAAMI,OAAQmB,aAAcvB,EAAMuB,kBAChGd,EAAAA,EAAAA,KAAA,OAAAD,UACIC,EAAAA,EAAAA,KAAA,OAAKe,IAAKxB,EAAMmB,QAAQM,OAAOC,MAAOC,IAAI,gBAE9CpB,EAAAA,EAAAA,MAAA,MAAAC,SAAA,CAAI,WAASR,EAAMmB,QAAQS,iCAZdnB,EAAAA,EAAAA,KAACoB,EAAAA,EAAS,GAevB,E,aCrBA,QAA2B,0BAA3B,EAA6D,uBCA7D,GAAgB,KAAO,oBCUvB,QATA,SAAc7B,GACV,OACEO,EAAAA,EAAAA,MAAA,OAAKa,UAAWU,EAAQC,KAAKvB,SAAA,EAC3BC,EAAAA,EAAAA,KAAA,OAAKe,IAAI,kIACRxB,EAAMgC,SACPzB,EAAAA,EAAAA,MAAA,OAAKa,UAAWU,EAAQG,UAAUzB,SAAA,EAACC,EAAAA,EAAAA,KAAA,QAAAD,SAAM,SAAYR,EAAMkC,UAGnE,E,yCCFA,MAAMC,GAAcC,EAAAA,EAAAA,GAAiB,IAG/BC,EAAUC,EAAAA,MAAYtC,IAG1B,IAKIuC,EAAUvC,EAAMwC,MAAMC,KAAKC,IACtBjC,EAAAA,EAAAA,KAACkC,EAAI,CAACX,QAASU,EAAGV,QAAqBE,KAAMQ,EAAGR,MAAhBQ,EAAGE,MAG5C,OAEErC,EAAAA,EAAAA,MAAA,OAAKa,UAAWU,EAAiBtB,SAAA,EAC/BC,EAAAA,EAAAA,KAAA,MAAAD,SAAI,cACLC,EAAAA,EAAAA,KAACoC,EAAc,CAACC,SAbFC,IACf/C,EAAMgD,QAAQD,EAAOE,YAAY,KAa/BxC,EAAAA,EAAAA,KAAA,OAAKW,UAAWU,EAActB,SAAE+B,MAC5B,IAIV,IAAIM,EAAkB7C,IACfO,EAAAA,EAAAA,MAAA,QAAMuC,SAAU9C,EAAMkD,aAAa1C,SAAA,EAClCC,EAAAA,EAAAA,KAAA,OAAAD,UACEC,EAAAA,EAAAA,KAAC0C,EAAAA,EAAK,CAACC,KAAK,cAAcC,UAAWC,EAAAA,GACrCC,SAAU,CAACC,EAAAA,EAAUrB,GAAcsB,YAAa,oBAElDhD,EAAAA,EAAAA,KAAA,OAAAD,UACEC,EAAAA,EAAAA,KAAA,UAAAD,SAAQ,kBAMlBqC,GAAiBa,EAAAA,EAAAA,GAAU,CAACC,KAAM,yBAAjBD,CAA2Cb,GAC5D,U,cCvCA,MAsBA,GAHyBe,EAAAA,EAAAA,KAnBAC,IACjB,CACJrB,MAAOqB,EAAMC,WAAWC,UACxBC,YAAaH,EAAMC,WAAWE,gBAINC,IACnB,CACNjB,QAAUC,IACTgB,GAASC,EAAAA,EAAAA,IAAqBjB,GAAa,KAStBW,CAA6CvB,GCftE,QARA,SAAiBrC,GACb,OACEO,EAAAA,EAAAA,MAAA,OAAAC,SAAA,EACAC,EAAAA,EAAAA,KAAC0D,EAAW,CAAChD,QAASnB,EAAMmB,QAASf,OAAQJ,EAAMI,OAAQmB,aAAcvB,EAAMuB,gBAC/Ed,EAAAA,EAAAA,KAAC2D,EAAgB,MAGvB,E,wBCHA,MA2BA,GAAeC,E,QAAAA,IACbC,EAAAA,EADF,EA3ByBC,KAEvB,MAAMN,GAAWO,EAAAA,EAAAA,MACXC,GAAWC,EAAAA,EAAAA,MACXC,GAASC,EAAAA,EAAAA,MACTzD,GAAU0D,EAAAA,EAAAA,KAAYhB,GAASA,EAAMC,WAAW3C,UAChDf,GAASyE,EAAAA,EAAAA,KAAYhB,GAASA,EAAMC,WAAW1D,SAC/C0E,GAAkBD,EAAAA,EAAAA,KAAYhB,GAASA,EAAMkB,KAAKnC,KAcxD,OAZAtC,EAAAA,EAAAA,YAAU,KACR,IAAI0E,EAASL,EAAO,KACfK,IACHA,EAASF,EACJE,GACHP,EAAS,WAGbR,GAASgB,EAAAA,EAAAA,IAAeD,IACxBf,GAASiB,EAAAA,EAAAA,IAAUF,GAAQ,GAC1B,CAACL,EAAQG,EAAiBb,EAAUQ,KAIrChE,EAAAA,EAAAA,KAAC0E,EAAO,CAAChE,QAASA,EAASf,OAAQA,EAAQmB,aAAcA,EAAAA,IAAgB,G,6EC3B7E,IAAI6D,EAA8BvB,IAAK,CACnCkB,KAAMlB,EAAMkB,KAAKM,SAGd,MAAMf,EAAoBgB,IAeM1B,EAAAA,EAAAA,IAAQwB,EAARxB,EAbV5D,IAGzB,IAAIyE,GAAWC,EAAAA,EAAAA,MAOf,OANApE,EAAAA,EAAAA,YAAU,KACR,IAAKN,EAAM+E,KACT,OAAON,EAAS,WAClB,GACC,CAACzE,EAAM+E,KAAMN,KAEThE,EAAAA,EAAAA,KAAC6E,EAAS,IAAKtF,GAAS,G","sources":["webpack://react-1/./src/components/Profile/ProfileInfo/ProfileInfo.module.css?ead2","components/Profile/ProfileInfo/ProfileStatusWithHooks.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","webpack://react-1/./src/components/Post/MyPosts/MyPosts.module.css?a7bb","webpack://react-1/./src/components/Post/Post.module.css?4903","components/Post/Post.jsx","components/Post/MyPosts/MyPosts.jsx","components/Post/MyPosts/MyPostsContainer.jsx","components/Profile/profile.jsx","components/Profile/ProfileContainer.jsx","hoc/withAuthRedirect.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"descriptionBlock\":\"ProfileInfo_descriptionBlock__sHUqx\",\"image\":\"ProfileInfo_image__PvguH\",\"status\":\"ProfileInfo_status__1FSxs\"};","import React, { useEffect } from 'react';\r\nimport { useState } from 'react';\r\n\r\n\r\nexport const ProfileStatusWithHooks = (props) =>{\r\nlet [editMode, setEditMode] = useState(false);\r\nlet [status, setStatus] = useState(props.status);\r\n\r\nuseEffect(() => {\r\n setStatus(props.status)\r\n}, [props.status])\r\n\r\nconst activateEditMode = () => {\r\n   setEditMode(true);\r\n}\r\nconst deactivateEditMode = () => {\r\n   setEditMode(false);\r\n}\r\nconst onStatusChange = (e) => {\r\n  setStatus(e.currentTarget.value);\r\n}\r\n\r\n    \r\n    return(\r\n        <div>\r\n            {!editMode && \r\n              <div>\r\n                <span onDoubleClick={activateEditMode}>{status || \"No status\"}</span>\r\n              </div>\r\n            }\r\n            {editMode && \r\n            <div>\r\n                <input onChange={onStatusChange} autoFocus={true} onBlur={deactivateEditMode} value={status}/>\r\n            </div>\r\n            }\r\n        </div>\r\n    )\r\n\r\n\r\n}\r\nexport default ProfileStatusWithHooks;","import React from 'react';\r\nimport {Preloader} from '../../../common-components/Preloader/Preloader';\r\nimport style from './ProfileInfo.module.css'\r\nimport ProfileStatusWithHooks from './ProfileStatusWithHooks';\r\n\r\nfunction ProfileInfo(props) {\r\n    if(!props.profile){\r\n      return <Preloader />\r\n    }\r\n    return(\r\n<div>\r\n  \r\n<div>\r\n  {/* <img alt='pho' src='https://www.desertfun.ae/images/gallery/IMG%20World%20Park%20By%20Desertfun.ae%203.jpg'/> */}\r\n</div>\r\n<div className={style.status}><ProfileStatusWithHooks status={props.status} updateStatus={props.updateStatus}/></div>\r\n<div>\r\n    <img src={props.profile.photos.large} alt=\"Ava+desc\" />\r\n</div>\r\n<h1>STATUS: {props.profile.lookingForAJobDescription}</h1>\r\n</div>\r\n    );\r\n}\r\n\r\nexport default ProfileInfo;","// extracted by mini-css-extract-plugin\nexport default {\"postsAll\":\"MyPosts_postsAll__XkzEW\",\"posts\":\"MyPosts_posts__sw3Pj\"};","// extracted by mini-css-extract-plugin\nexport default {\"item\":\"Post_item__1cpou\"};","import classes from './Post.module.css';\r\n\r\nfunction Post(props) {\r\n    return(\r\n      <div className={classes.item}>\r\n        <img src=\"https://lumiere-a.akamaihd.net/v1/images/hb_avatar_frontiersofpandora_mobile_2059_b4205bda.jpeg?region=0,0,1024,768&width=960\" />\r\n        {props.message}\r\n        <div className={classes.item_like}><span>like</span>{props.like}</div>\r\n      </div>\r\n    );\r\n}\r\nexport default Post;","import classes from \"./MyPosts.module.css\";\r\nimport Post from \"./../Post\";\r\nimport { Field, reduxForm } from \"redux-form\";\r\nimport { maxLengthCreator, required } from \"../../../utils/validators/validator\";\r\nimport { Textarea } from \"../../../common-components/FormsControlls/FormsControls\";\r\nimport React from \"react\";\r\n\r\n\r\nconst maxLength10 = maxLengthCreator(10);\r\n\r\n\r\nconst MyPosts = React.memo((props) =>{\r\n\r\n\r\n  let onAddPost = (values) => {\r\n    props.addPost(values.newPostText);\r\n  };\r\n\r\n\r\n  let postMap = props.posts.map((el) => {\r\n    return <Post message={el.message} key={el.id} like={el.like} />;\r\n  });\r\n\r\n  return (\r\n    \r\n    <div className={classes.postsAll}>\r\n      <h3>My posts</h3>\r\n     <AddNewPostForm onSubmit={onAddPost}/>\r\n      <div className={classes.posts}>{postMap}</div>\r\n    </div>\r\n  );\r\n})\r\n\r\nlet AddNewPostForm = (props) => {\r\nreturn <form onSubmit={props.handleSubmit}>\r\n        <div>\r\n          <Field name=\"newPostText\" component={Textarea}\r\n          validate={[required, maxLength10]} placeholder={\"Post message\"}/>\r\n        </div>\r\n        <div>\r\n          <button>Add post</button>\r\n        </div>\r\n      </form>\r\n\r\n}\r\n\r\nAddNewPostForm = reduxForm({form: \"ProfileAddNewPostForm\"})(AddNewPostForm);\r\nexport default MyPosts;\r\n","import {\r\n  addPostActionCreator\r\n} from \"./../../../redux/myPostData-reducer\";\r\nimport MyPosts from \"./MyPosts\";\r\nimport { connect } from \"react-redux\";\r\n\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n  return{\r\n    posts: state.myPostData.postsData,\r\n    textareData: state.myPostData.textareData\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n   addPost: (newPostText) => {\r\n    dispatch(addPostActionCreator(newPostText));\r\n    },\r\n    // onChangeFuncMyPostsContainerComponent: (textFromTextareaMyPosts) => {\r\n    //   let action = onChangeCreatorMyPosts(textFromTextareaMyPosts);\r\n    //    dispatch(action);\r\n    // }\r\n  }\r\n}\r\n\r\nconst MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts);\r\n\r\n\r\nexport default MyPostsContainer;\r\n\r\n","import ProfileInfo from './ProfileInfo/ProfileInfo';\r\nimport MyPostsContainer from '../Post/MyPosts/MyPostsContainer';\r\n\r\n\r\nfunction Profile(props) {\r\n    return(\r\n      <div>\r\n      <ProfileInfo profile={props.profile} status={props.status} updateStatus={props.updateStatus}/>\r\n      <MyPostsContainer />\r\n      </div>\r\n    );\r\n}\r\nexport default Profile;\r\n\r\n","import React, { useEffect } from \"react\";\r\nimport Profile from \"./profile\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { useNavigate, useParams } from \"react-router-dom\";\r\nimport { getStatus, getUserProfile, updateStatus } from \"../../redux/myPostData-reducer\";\r\nimport { withAuthRedirect } from \"../../hoc/withAuthRedirect\";\r\nimport { compose } from \"redux\";\r\n\r\nconst ProfileContainer = () => {\r\n///////////////xcvbnm,\r\n  const dispatch = useDispatch();\r\n  const navigate = useNavigate();\r\n  const params = useParams();\r\n  const profile = useSelector(state => state.myPostData.profile);\r\n  const status = useSelector(state => state.myPostData.status);\r\n  const autorizedUserId = useSelector(state => state.auth.id);\r\n\r\n  useEffect(() => {\r\n    let userId = params['*'];\r\n    if (!userId) {\r\n      userId = autorizedUserId;\r\n      if (!userId) {\r\n        navigate(\"/login\");\r\n      }\r\n    }\r\n    dispatch(getUserProfile(userId));\r\n    dispatch(getStatus(userId));\r\n  }, [params, autorizedUserId, dispatch, navigate]);\r\n\r\n  return (\r\n    \r\n    <Profile profile={profile} status={status} updateStatus={updateStatus} />\r\n  );\r\n};\r\n\r\nexport default compose(\r\n  withAuthRedirect,\r\n)(ProfileContainer);\r\n","import { useNavigate } from \"react-router-dom\";\r\nimport { useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nlet mapStateToPropsForRedirect = (state) => ({\r\n    auth: state.auth.isAuth\r\n}) \r\n\r\nexport const withAuthRedirect = (Component) => {\r\n\r\n  const RedirectComponent = (props) => {\r\n\r\n    //редирект на стр логина\r\n    let navigate = useNavigate();\r\n    useEffect(() => {\r\n      if (!props.auth) {\r\n        return navigate(\"../login\"); \r\n      }\r\n    }, [props.auth, navigate]);\r\n\r\n    return <Component {...props} />\r\n  };\r\n\r\n  let ConnectedAuthRedirectComponent = connect(mapStateToPropsForRedirect)(RedirectComponent)\r\n\r\n  return ConnectedAuthRedirectComponent;\r\n};\r\n"],"names":["props","editMode","setEditMode","useState","status","setStatus","useEffect","_jsxs","children","_jsx","onDoubleClick","activateEditMode","onChange","e","currentTarget","value","autoFocus","onBlur","deactivateEditMode","profile","className","style","ProfileStatusWithHooks","updateStatus","src","photos","large","alt","lookingForAJobDescription","Preloader","classes","item","message","item_like","like","maxLength10","maxLengthCreator","MyPosts","React","postMap","posts","map","el","Post","id","AddNewPostForm","onSubmit","values","addPost","newPostText","handleSubmit","Field","name","component","Textarea","validate","required","placeholder","reduxForm","form","connect","state","myPostData","postsData","textareData","dispatch","addPostActionCreator","ProfileInfo","MyPostsContainer","compose","withAuthRedirect","ProfileContainer","useDispatch","navigate","useNavigate","params","useParams","useSelector","autorizedUserId","auth","userId","getUserProfile","getStatus","Profile","mapStateToPropsForRedirect","isAuth","Component"],"sourceRoot":""}