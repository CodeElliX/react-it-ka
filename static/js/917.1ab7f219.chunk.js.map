{"version":3,"file":"static/js/917.1ab7f219.chunk.js","mappings":"6IACA,SAAgB,WAAa,6BAA6B,QAAU,0BAA0B,SAAW,4B,uBCazG,QAVA,SAAoBA,GACpB,IAAIC,EAAU,YAAcD,EAAME,GAC9B,OACHC,EAAAA,EAAAA,KAAA,OAAAC,UACGD,EAAAA,EAAAA,KAACE,EAAAA,GAAO,CAACC,GAAIL,EAAQG,SAAEJ,EAAMO,QAGjC,ECAA,QARA,SAAiBP,GACjB,OACIG,EAAAA,EAAAA,KAAA,OAAKK,UAAWC,EAAMC,QAAQN,SACzBJ,EAAMU,SAGf,E,mDCFA,MAAMC,GAAcC,EAAAA,EAAAA,GAAiB,IAqBrC,GAAeC,EAAAA,EAAAA,GAAU,CAAEC,KAAM,wBAAjC,EAnBwBd,IAEpBe,EAAAA,EAAAA,MAAA,QAAMC,SAAUhB,EAAMiB,aAAab,SAAA,EACjCD,EAAAA,EAAAA,KAAA,OAAAC,UACED,EAAAA,EAAAA,KAACe,EAAAA,EAAK,CACJC,UAAWC,EAAAA,GACXb,KAAM,iBACNc,SAAU,CAACC,EAAAA,EAAUX,GACrBY,YAAY,yBAIhBpB,EAAAA,EAAAA,KAAA,OAAAC,UACED,EAAAA,EAAAA,KAAA,UAAAC,SAAQ,gBC0ChB,QAxDA,SAAmBJ,GAEjB,IAAIwB,EAAwBxB,EAAMyB,MAAMC,cAAcC,aAAaC,KAAIC,IAAM1B,EAAAA,EAAAA,KAAC2B,EAAU,CAAC5B,GAAI2B,EAAG3B,GAAgBK,KAAMsB,EAAGtB,MAAhBsB,EAAG3B,MACxG6B,EAAwB/B,EAAMyB,MAAMC,cAAcM,YAAYJ,KAAIC,IAAM1B,EAAAA,EAAAA,KAAC8B,EAAO,CAAC/B,GAAI2B,EAAG3B,GAAgBQ,QAASmB,EAAGnB,SAAnBmB,EAAG3B,MAOpGgC,GAAWC,EAAAA,EAAAA,MAQb,OAPFC,EAAAA,EAAAA,YAAU,KACR,IAAIpC,EAAMyB,MAAMY,KAAKC,OACnB,OAAOJ,EAAS,WAClB,GACC,CAAClC,EAAMyB,MAAMY,KAAKC,OAAQJ,KAI3BnB,EAAAA,EAAAA,MAAA,OAAKP,UAAWC,EAAM8B,WAAWnC,SAAA,EACzBD,EAAAA,EAAAA,KAAA,OAAKK,UAAWC,EAAM+B,QAAQpC,SACxBoB,KAENT,EAAAA,EAAAA,MAAA,OAAKP,UAAWC,EAAMgC,SAASrC,SAAA,EAC/BD,EAAAA,EAAAA,KAAA,OAAAC,SAAM2B,KACN5B,EAAAA,EAAAA,KAAA,OAAAC,UACAD,EAAAA,EAAAA,KAACuC,EAAc,CAAC1B,SArBL2B,IACrB3C,EAAM4C,YAAYD,EAAOE,eAAe,WAyB1C,E,kCCdA,SAAeC,E,QAAAA,KACbC,EAAAA,EAAAA,KAlBqBtB,IACd,CACNA,MAAOA,MAMgBuB,IACjB,CACLJ,YAAcC,IACZG,GAASC,EAAAA,EAAAA,GAAmBJ,GAAgB,MAQhDK,EAAAA,EAFF,CAGEC,E,6ECxBF,IAAIC,EAA8B3B,IAAK,CACnCY,KAAMZ,EAAMY,KAAKC,SAGd,MAAMY,EAAoBG,IAeMN,EAAAA,EAAAA,IAAQK,EAARL,EAbV/C,IAGzB,IAAIkC,GAAWC,EAAAA,EAAAA,MAOf,OANAC,EAAAA,EAAAA,YAAU,KACR,IAAKpC,EAAMqC,KACT,OAAOH,EAAS,WAClB,GACC,CAAClC,EAAMqC,KAAMH,KAET/B,EAAAA,EAAAA,KAACkD,EAAS,IAAKrD,GAAS,G","sources":["webpack://react-1/./src/components/Dialoges/Dialoges.module.css?c036","components/Dialoges/DialogItem/DialogItem.jsx","components/Dialoges/Message/Message.jsx","components/Dialoges/AddMessageForm/AddMessageForm.jsx","components/Dialoges/Dialoges.jsx","components/Dialoges/DialogesContainer.jsx","hoc/withAuthRedirect.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"ollDialogs\":\"Dialoges_ollDialogs__4XQZs\",\"dialogs\":\"Dialoges_dialogs__6K1iQ\",\"messages\":\"Dialoges_messages__Rx6CD\"};","import style from \"./../Dialoges.module.css\";\r\nimport { NavLink } from 'react-router-dom';\r\n\r\n\r\nfunction DialogItem(props) {\r\nlet pathWay = \"/dialogs/\" + props.id;\r\n    return(\r\n <div>\r\n    <NavLink to={pathWay}>{props.name}</NavLink>\r\n </div>\r\n);\r\n}\r\n\r\n\r\nexport default DialogItem;","import style from './../Dialoges.module.css';\r\n\r\n\r\nfunction Message(props) {\r\nreturn(\r\n    <div className={style.message}>\r\n        {props.message}\r\n    </div>\r\n)\r\n}\r\n\r\nexport default Message;","import { Field, reduxForm } from \"redux-form\";\r\nimport { Textarea } from \"../../../common-components/FormsControlls/FormsControls\";\r\nimport {\r\n  maxLengthCreator,\r\n  required,\r\n} from \"../../../utils/validators/validator\";\r\n\r\nconst maxLength50 = maxLengthCreator(50);\r\n\r\nconst AddMessageForm = (props) => {\r\n  return (\r\n    <form onSubmit={props.handleSubmit}>\r\n      <div>\r\n        <Field\r\n          component={Textarea}\r\n          name={\"newMessageBody\"}\r\n          validate={[required, maxLength50]}\r\n          placeholder=\"Enter you message\"\r\n        />\r\n      </div>\r\n\r\n      <div>\r\n        <button>Send</button>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default reduxForm({ form: \"dialogAddMessageForm\" })(AddMessageForm);\r\n","import { useNavigate } from 'react-router-dom';\r\nimport style from './Dialoges.module.css';\r\nimport DialogItem from './DialogItem/DialogItem';\r\nimport Message from './Message/Message';\r\nimport { useEffect } from 'react';\r\n// import { Field, reduxForm } from 'redux-form';\r\nimport AddMessageForm from './AddMessageForm/AddMessageForm';\r\n\r\nfunction  Dialoges(props) {\r\n\r\n  let dialogesComponentData = props.state.myMessageData.dialogesData.map(el => <DialogItem id={el.id} key={el.id} name={el.name} />) \r\n  let messagesComponentData = props.state.myMessageData.messageData.map(el => <Message id={el.id} key={el.id} message={el.message} />) \r\n  \r\n  let addNewMessage = (values) => {\r\n  props.sendMessage(values.newMessageBody);\r\n  }\r\n\r\n  //редирект логина\r\n  let navigate = useNavigate();\r\n  useEffect(() => {\r\n    if(!props.state.auth.isAuth) {\r\n      return navigate(\"../login\")\r\n    }\r\n  }, [props.state.auth.isAuth, navigate])\r\n\r\n\r\n    return(\r\n    <div className={style.ollDialogs}>\r\n            <div className={style.dialogs}>\r\n                 {dialogesComponentData}\r\n            </div>\r\n            <div className={style.messages}>\r\n            <div>{messagesComponentData}</div>\r\n            <div>\r\n            <AddMessageForm onSubmit={addNewMessage} />\r\n            </div>\r\n            </div>\r\n    </div>\r\n    )\r\n}\r\n\r\n\r\n// const AddMessageForm = (props) => {\r\n//   return (\r\n\r\n// <form onSubmit={props.handleSubmit}>\r\n\r\n// <div>\r\n//   <Field component={\"textarea\"} name={\"newMessageBody\"} placeholder='Enter you message'/>\r\n// </div>\r\n\r\n// <div>\r\n//   <button>\r\n//     Send\r\n//   </button>\r\n// </div> \r\n\r\n//  </form>\r\n// )\r\n// }\r\n\r\n\r\n// const AddMessageFormRedux = reduxForm({form: \"dialogAddMessageForm\"})(AddMessageForm);\r\n\r\nexport default Dialoges;","import Dialoges from \"./Dialoges\";\r\nimport { sendMessageCreator} from \"./../../redux/myMessageData-reducer\";\r\nimport { connect } from \"react-redux\";\r\nimport { withAuthRedirect } from \"../../hoc/withAuthRedirect\";\r\nimport { compose } from \"redux\";\r\n\r\n\r\n\r\nlet mapStateToProps = (state) => {\r\n  return {\r\n   state: state,\r\n  //  auth: state.auth.isAuth\r\n  }\r\n}\r\n\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    sendMessage: (newMessageBody) => {\r\n      dispatch(sendMessageCreator(newMessageBody));\r\n    }\r\n  }\r\n}\r\n\r\n\r\nexport default compose(\r\n  connect(mapStateToProps, mapDispatchToProps),\r\n  withAuthRedirect\r\n)(Dialoges);\r\n","import { useNavigate } from \"react-router-dom\";\r\nimport { useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nlet mapStateToPropsForRedirect = (state) => ({\r\n    auth: state.auth.isAuth\r\n}) \r\n\r\nexport const withAuthRedirect = (Component) => {\r\n\r\n  const RedirectComponent = (props) => {\r\n\r\n    //редирект на стр логина\r\n    let navigate = useNavigate();\r\n    useEffect(() => {\r\n      if (!props.auth) {\r\n        return navigate(\"../login\"); \r\n      }\r\n    }, [props.auth, navigate]);\r\n\r\n    return <Component {...props} />\r\n  };\r\n\r\n  let ConnectedAuthRedirectComponent = connect(mapStateToPropsForRedirect)(RedirectComponent)\r\n\r\n  return ConnectedAuthRedirectComponent;\r\n};\r\n"],"names":["props","pathWay","id","_jsx","children","NavLink","to","name","className","style","message","maxLength50","maxLengthCreator","reduxForm","form","_jsxs","onSubmit","handleSubmit","Field","component","Textarea","validate","required","placeholder","dialogesComponentData","state","myMessageData","dialogesData","map","el","DialogItem","messagesComponentData","messageData","Message","navigate","useNavigate","useEffect","auth","isAuth","ollDialogs","dialogs","messages","AddMessageForm","values","sendMessage","newMessageBody","compose","connect","dispatch","sendMessageCreator","withAuthRedirect","Dialoges","mapStateToPropsForRedirect","Component"],"sourceRoot":""}